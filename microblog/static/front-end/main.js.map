{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h2>Log In</h2>\n<div class=\"row\" *ngIf=\"!_userService.token\">\n  <div class=\"col-sm-4\">\n    <label>Username:</label><br />\n    <input type=\"text\" name=\"login-username\" [(ngModel)]=\"user.username\">\n    <span *ngFor=\"let error of _userService.errors.username\"><br />\n    {{ error }}</span></div>\n  <div class=\"col-sm-4\">\n    <label>Password:</label><br />\n    <input type=\"password\" name=\"login-password\" [(ngModel)]=\"user.password\">\n    <span *ngFor=\"let error of _userService.errors.password\"><br />\n    {{ error }}</span>\n  </div>\n  <div class=\"col-sm-4\">\n    <button (click)=\"login()\" class=\"btn btn-primary\">Log In</button>\n  </div>\n  <div class=\"col-sm-12\">\n    <span *ngFor=\"let error of _userService.errors.non_field_errors\">{{ error }}<br /></span>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"_userService.token\">\n  <div class=\"col-sm-12\">You are logged in as {{ _userService.username }}.<br />\n    Token Expires: {{ _userService.token_expires }}<br />\n    <button (click)=\"refreshToken()\" class=\"btn btn-primary\">Refresh Token</button>\n    <button (click)=\"logout()\" class=\"btn btn-primary\">Log Out</button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from './user.service';\nimport {throwError} from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * An object representing the user for the login form\n   */\n  public user: any;\n\n  constructor(public _userService: UserService) { }\n\n  ngOnInit() {\n    this.user = {\n      username: '',\n      password: ''\n    };\n  }\n\n  login() {\n    this._userService.login({'username': this.user.username, 'password': this.user.password});\n  }\n\n  refreshToken() {\n    this._userService.refreshToken();\n  }\n\n  logout() {\n    this._userService.logout();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';    // add this\nimport { FormsModule } from '@angular/forms';    // add this\nimport { AppComponent } from './app.component';\nimport { UserService } from './user.service';    // add this\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule],    // add this\n  providers: [UserService],    // add this\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable()\nexport class UserService {\n\n  private httpOptions: any;\n\n  // текущий JWT токен\n  public token: string  = '';\n\n  // время окончания жизни токена\n  public token_expires: Date = new Date;\n\n  // логин пользователя\n  public username: string = '';\n\n  // сообщения об ошибках авторизации\n  public errors: any = [];\n\n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n  }\n\n  // используем http.post() для получения токена\n  public login(user: { username: any; password: any; }) {\n    this.http.post('/login', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        if('token' in data)\n          this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  // обновление JWT токена\n  public refreshToken() {\n    this.http.post('/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n      data => {\n        if('token' in data)\n          this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n\n  public logout() {\n    this.token = '';\n    this.token_expires = new Date;\n    this.username = '';\n  }\n\n  private updateData(token: string) {\n    this.token = token;\n    this.errors = [];\n\n    // декодирование токена для получения логина и времени жизни токена\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    console.log(token_decoded);\n    this.username = token_decoded.username;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}